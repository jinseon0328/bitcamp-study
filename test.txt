- 학습 목표 달성 확인 목록
    - [v] 서버 컴퓨터와 서버 프로그램의 관계를 이해하는가?
    우선 Server란 네트워크에서 정보를 제공하는 컴퓨터를 말한다. 반대로 client란 정보를 받아가는 컴퓨터를 말한다. server가 점원이고
    client가 고객이다. 즉 서버는 다른 컴퓨터 또는 시스템에 서비스를 제공하는 시스템이고 클라이언트는 서버에서 제공된 서비스를 
    방다서 수행하는 시스템이다. 
    24시간 데이터를 보내주는 프로그램을 서버 프로그램이라고 하고, 그 프로그램이 실행되는 컴퓨터를 서버 컴퓨터라고 한다. 
    예를 들어 친구들끼리 일정을 공유하기 위해서 함께 공동달력을 쓸 때, 내 PC가 아닌 인터넷 상의 어떤 공간에 데이터를 함께 
    저장하려고 한다. 이 때 하나의 프로그램으로 작성하고 관리하는 것이 유리하므로 이 기능을 서버에서 동작하도록 한다. 이런 프로그램을
    서버 프로그램이라고 한다. 
    - [v] 서버 프로그램과 데스크톱 프로그램을 구분할 수 있는가?
    서버 프로그램은 서버 컴퓨터에 깔린 프로그램으로 내 로컬에 있는 프로그램이 아니다. 예를 들어 네이버 검색 프로그램과 같은 것이 
    있다. 데스크톱 프로그램은 내 로컬에 깔아놓고 쓰는 프로그램으로 예를들어 한글이나 파워포인트 같은 프로그램이 있다.
    - [] 클라이언트 프로그램이 무엇인지 이해하고 있는가?
    클라이언트 프로그램은 서버에서 보내온 데이터를 읽어와서 감시, 제어가 가능하도록 하는 프로그램이다.
    - [v] 클라이언트/서버 구조로 된 애플리케이션의 예를 들 수 있는가?
    카카오톡 서버 - 카카오톡 클라이언트
    웹 서버 - 웹 클라이언트
    오버워치 서버 - 오버워치 클라이언트
    - [] git 클라이언트 프로그램을 설치할 수 있는가?
    
    - [] macOS 패키지 관리자 프로그램인 HomeBrew 를 설치할 수 있는가?
    - [] HomeBrew 패키지 관리자를 통해 git 프로그램을 설치할 수 있는가?
    - [] github.com에서 깃 저장소를 생성할 수 있는가?
    우선 git 아이디를 만들어준다. 나중에 취업해서도 계속 쓸 아이디로 만들어준다. 이후에 내 화면에 들어가서 Repositories에 들어가서
    new를 누르고 폴더를 생성해준다.
    - [v] git 서버의 저장소를 로컬로 복제할 수 있는가?
    예를들어 git 서버에 있는 eoms 저장소 내 eoms-java 폴더를 내 로컬로 옮길 경우 우선 코드를 복사하고 cmd를 열어서 
    저장할 폴더로 이동 후 \clone https://github.com/eomcs/eomcs-java.git 하여 실행한다.
    - [v] 로컬에서 작업한 파일을 로컬 깃 저장소에 백업할 수 있는가?
    cmd를 열어서 원하는 폴더로 이동 후 백업 명단 작성을 먼저한다. \git add . 입력 후 \git commit -m"."을 입력한다
    - [v] 로컬 깃 저장소에 백업한 내용을 깃 서버의 저장소에 업로드 할 수 있는가?
    \git config --global user.email "wishofsun@daum.net" 
    \git config --global user.name "jinseon0328"
    입력 하여 이메일과 아이디 설정한 후
    \git push하여 백업한 내용을 깃 서버의 저장소에 업로드 한다.
    - [v] 컴퓨터에서 CPU와 RAM, HDD 의 관계 및 역할을 이해하고 있는가?
    컴퓨터에서 CPU는 Central Processing Unit로 중앙처리장치를 의미하고 명령어를 처리해주고 저장한다. RAM은 내부저장장치로
    내부 메모리이며 HDD는 외부 메모리이다. HDD가 뷔페 식당 주방이면 RAM이 뷔페 탁자이며 CPU는 뷔페 접시이다. notepad.exe를
    실행시킬 때 HDD는 RAM으로 loading 되고 CPU로 실행할 일부 명령어가 loading된 후 실행되고 그 정보가 저장된다.
    - [v] OS의 역할을 대략적으로 이해하는가?
    OS는 간단하게 말하면 CPU를 운영하고 소프트웨어와 하드웨어를 관리하는 역할을 한다.
    - [v] 명령어를 작성할 때 CPU에 맞춰서 작성해야 하고 또한 OS에 맞춰서 명령어를 구성해야 하는 이유를 설명할 수 있는가?
    같은 한글로 적은 이력서라 해도 삼성과 LG의 이력서 형식이 다르듯이 OS 역시 같은 명령어라고 해도 형식이 다르므로 배치 형식을 
    달리해야한다.
    - [v] 명령어를 작성할 때 컴파일러의 역할은 무엇인가?
    명령어는 인간이 이해하는 언어이다. 따라서 기계가 이해하는 언어로 바꾸어 주어야 하는데, 이를 compile(변환)이라고 한다.
    - [] 컴파일러가 OS와 CPU에 따라 구분되는 이유를 아는가?
    CPU를 운영하는 게 OS이므로 OS에 따라 달라지고 CPU에 따라 달라진다.
    - [v] 자바 컴파일러가 들어 있는 JDK를 설치할 때 OS와 CPU에 따라 구분해야 하는 이유를 아는가?
    java는 OS에 독립적이기 때문이다. 어떤 CPU난 OS에 종속되지 않기 때문이다.
    - [v] 자바 컴파일러와 JVM의 역할을 설명할 수 있는가?
    자바 컴파일러는 java source를 bytecode라는 class 파일로 바꾸어 주는 역할을 하고 JVM은 bytecode를 실행하는 역할을 한다.
    - [v] 소스(source)와 바이트코드(bytecode)를 설명할 수 있는가?
    개발자가 처음 작성하는 명령어이며 바이트 코드의 원료가 source이고 source가 자바컴파일링 된 것이 bytecode이다
    - [v] 자바 컴파일러를 사용하여 소스 파일을 컴파일 할 수 있는가?
    vscode의 경우 원하는 내용을 입력한 후
    cmd를 열어서 원하는 폴더로 이동 후 \javac *.java를 입력하면 컴파일할 수 있다.
    - [v] JVM을 사용하여 바이트코드를 실행할 수 있는가?
    vscode의 경우 범파일을 한 후
    \java *을 입력하면 실행할 수 있다.
    - [] 컴파일 방식과 인터프리터 방식의 차이점과 장단점을 이해하는가?
    컴파일 방식은 컴파일러를 통해 컴파일 하므로 OS와 CPU에 맞춰서 따로따로 수행해야 한다. 그러므로 OS와 CPU에 종속적이므로 컴파일
    할 때 문법 검사가 한번 이루어지므로 실행속도가 빠르다. 그에 반해 인터프리터의 경우에는 OS와 CPU에 비종속적이고 독립적이다. 
    각 예를 들어  js 소스파일의 경우 인터프리터하여 실행시켜주면 OS와 CPU에 딱 맞는 인터프리터로 바꾸어 주는데, 이런 이유로 
    인터프리터 할 때마다 문법 검사가 이루어지므로 실행속도가 느리다. 
    - [] 자바는 하이브리드 방식으로 프로그램을 개발하고 실행한다. 하이브리드 방식을 설명할 수 있는가?
    자바는 컴파일 방식과 인터프리터 방식이 결합된 경우로, java source를 class파일로 컴파일 할 때에는 컴파일 방식으로 class파일을
    실행 시킬 때에는 인터프리터 방식을 사용한다. 따라서 bytecode를 실행할 때는 OS별 JVM이 필요하다.

    ## 10일차(2021-01-05,화)

- 컴파일 방식 프로그래밍 경험
    - GCC 컴파일러(MinGW) 설치
    - hello.c 소스 작성
    - 컴파일 및 실행
- JDK와 JRE, JavaSE, JavaEE, JavaME 소개
- JDK 및 Eclipse IDE 설치 및 설정


- 학습 목표 달성 확인 목록
    - [] 컴파일 방식과, 인터프리터 방식, 하이브리드 방식의 특징을 설명할 수 있는가?
    - [] 컴파일/인터프리터/하이브리드 방식의 예제를 작성하고 실행시킬 수 있는가?
    - [] GUI와 CLI가 무엇인지 알고 있다.
    GUI : Graphinal User Interface 음식을 주문할 때 점원에게 음식이 그려진 메뉴판에서 원하는 
    것을 커서로 가리키며 달라고 하는 것이라면
    CLI : Command-line Interface 음식을 주문할 때 글로 써서 주문하는 것이다
    - [] OS에서 shell 과 Shell Script 의 관계를 이해한다.
    - [] 윈도우 OS에서 '명령프롬프트'와 '파워쉘'의 차이점을 이해한다.
    명령프롬프트에서 쓰는 명령어와 파워쉘에서 쓰는 명령어가 다르다. 둘의 공통점은 CLI 형식으로
    구현된다는 것이고 차이점은 각기 다른 문법으로 명령어를 쓴다는 것이다.
    - [] 해시 값/디지털 지문이 무엇인지 알고 있다.
    
    - [] 알고리즘의 뜻을 말할 수 있다.
    - [] MD5, SHA-1, SHA256, SHA512, PGP 등이 무엇을 의미하는지 알고 있다.
    - [] Windows/macOS 에서 명령어를 사용하여 해시 코드를 알아 낼 수 있다.
    - [] JDK를 설치하고 환경 변수(JAVA_HOME, PATH)를 설정할 수 있는가?
    - [] Java IDE(Integrated Development Environment, 예: Eclipse)를 설치하고 설정할 수 있는가?

    ------------------------------------------------------------------------------------------------

    1/11(월)

    - Exam420~Exam580 복습
    - ex05 예습
    - 필기 정리

    1/12(화)

    - 애플리케이션 아키텍쳐의 변화 공부
    - mini pms 1-a~c 실습
    * encoding utf-8을 사용하는 이유
       : compiler에게 소스코드가 utf-8이라는 것을 어떤 character set으로 저장됐는지 알려주기 위해서 *
